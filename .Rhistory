sdid.err = apply(all.preds, 1:2, function(vv) vv[[1]]["sdid"] - vv[[1]]["truth"])
c(mean(did.err^2), mean(sc.err^2), mean(sdid.err^2))
state.rmse = data.frame(DID=sqrt(rowMeans(did.err^2)),
SC=sqrt(rowMeans(sc.err^2)),
SDID=sqrt(rowMeans(sdid.err^2)))
pdf("calif_sdid_vs_sc_mse.pdf")
pardef = par(xpd = FALSE, mar = c(4.5, 5, 3, 3) + 0.5, cex.lab=1.4, cex.axis=1.4, cex.main=1.4, cex.sub=1.4)
plot(state.rmse$SDID, state.rmse$SC, log = "xy", cex = 1.5,
xlab = "synthetic diff-in-diff RMSE",
ylab = "synthetic control RMSE")
abline(0, 1, lwd = 2, lty = 3)
points(state.rmse$SDID[calif], state.rmse$SC[calif], pch = 16, col = 4, cex = 1.5)
par(pardef)
dev.off()
for(iter in 1:length(STATE.NAME)) {
fnm = paste0("state_plots/", STATE.NAME[iter], ".pdf")
pdf(fnm)
pardef = par(xpd = FALSE, mar = c(4.5, 5, 3, 3) + 0.5, cex.lab=1.4, cex.axis=1.4, cex.main=1.4, cex.sub=1.4)
y.truth = sapply(all.preds[iter,], function(vv)vv["truth"])
y.did = sapply(all.preds[iter,], function(vv)vv["did"])
y.sc = sapply(all.preds[iter,], function(vv)vv["sc"])
y.sdid = sapply(all.preds[iter,], function(vv)vv["sdid"])
plot(1969 + focal.time, y.truth, type = "l", lwd = 4,
ylim = range(y.sc, y.did, y.sdid, y.truth),
xlab = "year", ylab = "smoking [packs per capita]")
lines(1969 + focal.time, y.did, lwd = 4, col = 5, lty = 2)
lines(1969 + focal.time, y.sc, lwd = 4, col = 4, lty = 5)
lines(1969 + focal.time, y.sdid, lwd = 4, col = 2, lty = 4)
par(pardef)
dev.off()
}
row.names(state.rmse) = STATE.NAME
state.rmse.ord = state.rmse[order(STATE.NAME),]
xtab.rmse = xtable(state.rmse.ord)
print(xtab.rmse, file="statewise_rmse.tex")
state.vec = STATE.NAME[rep(1:nrow(did.err), ncol(did.err))]
state.vec = factor(state.vec)
levels(state.vec) = rev(levels(state.vec))
time.vec = 1969 + as.numeric(t(matrix(rep(focal.time, nrow(did.err)), ncol(did.err), nrow(did.err))))
pdf("calif_sdid_errors.pdf")
sdid.df = data.frame(error=as.numeric(sdid.err), state=state.vec, time=time.vec)
ggplot(data=sdid.df, aes(x=time, y=state, fill=error)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="red", na.value="black", name="") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
pdf("calif_did_errors.pdf")
did.df = data.frame(error=as.numeric(did.err), state=state.vec, time=time.vec)
ggplot(data=did.df, aes(x=time, y=state, fill=error)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="red", na.value="black", name="") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
pdf("calif_sc_errors.pdf")
sc.df = data.frame(error=as.numeric(sc.err), state=state.vec, time=time.vec)
ggplot(data=sc.df, aes(x=time, y=state, fill=error)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="red", na.value="black", name="") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
View(STATE)
View(STATE)
View(data.raw)
View(data.raw)
View(X)
rm(list = ls())
setwd("~/reslocal/synthdid/experiments")
install.packages("mvtnorm")
library(mvtnorm)
library(synthdid)
N_0 <- 100
N_1 <- 20
T_0 <- 120
T_1 <- 5
N <- N_0 + N_1
T <- T_0 + T_1
tau <- 1
sigma <- 2
rank <- 2
rho <- 0.7
var <- outer(1:T, 1:T, FUN=function(x, y) rho^(abs(x-y)))
W <- (1:N > N_0) %*% t(1:T > T_0)
U <- matrix(rpois(rank * N, sqrt(1:N) / sqrt(N)), N, rank)
V <- matrix(rpois(rank * T, sqrt(1:T) / sqrt(T)), T, rank)
mu <- U %*% t(V)
error <- rmvnorm(N, sigma = var, method = "chol")
Y <- mu + tau * W  + sigma * error
## These should be small if we've correctly formulated our mathematical programs in sc_weight
max(abs(attr(synthdid_estimate(Y,N_0,T_0, solver='OSQP'), 'lambda') -
attr(synthdid_estimate(Y,N_0,T_0, solver='ECOS'), 'lambda')))
max(abs(attr(synthdid_estimate(Y,N_0,T_0, lambda.intercept=TRUE, solver='OSQP'), 'lambda') -
attr(synthdid_estimate(Y,N_0,T_0, lambda.intercept=TRUE, solver='ECOS'), 'lambda')))
setwd("~/reslocal/synthdid/experiments/confidence_intervals")
library(mvtnorm)
library(synthdid)
source('../../R/sdid_lib.R')
N_0 <- 100
N_1 <- 20
T_0 <- 120
T_1 <- 5
N <- N_0 + N_1
T <- T_0 + T_1
tau <- 1
sigma <- 2
rank <- 2
rho <- 0.7
var <- outer(1:T, 1:T, FUN=function(x, y) rho^(abs(x-y)))
W <- (1:N > N_0) %*% t(1:T > T_0)
mu.reps <- 100
noise.reps <- 100
include.slow=FALSE
results_full <- matrix(0, ncol = 4, nrow = mu.reps*noise.reps)
for (l in 1:mu.reps){
U <- matrix(rpois(rank * N, sqrt(1:N) / sqrt(N)), N, rank)
V <- matrix(rpois(rank * T, sqrt(1:T) / sqrt(T)), T, rank)
mu <- U %*% t(V)
for (e in 1:noise.reps){
print(c(l,e))
error <- rmvnorm(N, sigma = var, method = "chol")
Y <- mu + tau * W  + sigma * error
tau.sdid = synthdid_estimate(Y,N_0,T_0)
tau.sdid.2 = synthdid_estimate(Y,N_0,T_0, zeta.omega=var(as.numeric(Y))*100)
t.sdid = (tau.sdid - tau)/attr(tau.sdid,'se')
t.sdid.2 = (tau.sdid.2 - tau)/attr(tau.sdid.2,'se')
tau.did = did_estimate(Y,N_0,T_0)
t.did = (tau.did - tau)/attr(tau.did,'se')
if(include.slow) {
tau.sdid.slow = synthdid_estimate(Y,N_0,T_0,fast.var=FALSE)
t.sdid.slow = (tau.sdid.slow - tau)/attr(tau.sdid.slow,'se')
} else {
t.sdid.slow = NA
}
index <- (l-1)*noise.reps + e
results_full[index,] <- c(t.sdid.slow, t.sdid, t.sdid.2, t.did)
}
}
print(paste('coverage', 'synthdid',                        round(mean(abs(results_full[,1]) < 1.96),4),
'synthdid-fastvar',                round(mean(abs(results_full[,2]) < 1.96),4),
'synthdid-fastvar-omegapenalty',   round(mean(abs(results_full[,3]) < 1.96),4),
'did',                             round(mean(abs(results_full[,4]) < 1.96),4)))
pdf(sprintf('qq_sdid_cor_%d.pdf', 100*rho), width=5,height=5,paper='special')
qqnorm(results_full[,1], pch = 1, frame = F, cex = 0.5, main = NULL)
qqline(rnorm(mu.reps*noise.reps), col = "black", lwd = 1, lty = 2)
box(lwd=0.1)
dev.off()
pdf(sprintf('qq_did_cor_%d.pdf', 100*rho), width=5,height=5,paper='special')
qqnorm(results_full[,2], pch = 1, frame = F,cex = 0.5,main = NULL)
qqline(rnorm(mu.reps*noise.reps), col = "black", lwd = 1, lty = 2)
box(lwd=0.1)
dev.off()
pdf(sprintf('qq_sdid_slow_cor_%d.pdf', 100*rho), width=5,height=5,paper='special')
qqnorm(results_full[,3], pch = 1, frame = F,cex = 0.5,main = NULL)
qqline(rnorm(mu.reps*noise.reps), col = "black", lwd = 1, lty = 2)
box(lwd=0.1)
dev.off()
setwd("~/reslocal/synthdid/experiments/california_smoking")
library(ggplot2)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
pre = 1:19
post = 20:31
calif = which(STATE.NAME == "California")
# only consider 5 post-treatment periods
ss = calif
omega.weight = sc_weight(t(Y.pre[-ss,]), Y.pre[ss,], zeta = var(as.numeric(Y.pre)))
lambda.weight = sc_weight(Y.pre[-ss,], apply(Y.post[-ss,],1,mean), zeta = var(as.numeric(Y.pre)))
col.SC = sum(lambda.weight * Y.pre[ss,])
row.SC = sum(omega.weight  *  apply(Y.post[-ss,], 1, mean))
cross.term = omega.weight %*% Y.pre[-ss,] %*% lambda.weight
sdid = as.numeric(row.SC + col.SC - cross.term)
sc.trajectory = omega.weight %*% cbind(Y.pre[-ss,], Y.post[-ss,])
pre.time = sum(pre * lambda.weight) + 1969
post.time = mean(post) + 1969
calif.post = mean(Y.post[ss,])
ggplot() + geom_segment(aes(x=pre.time, xend=post.time, y=col.SC, yend=calif.post), color='red') +
geom_point(aes(x=c(pre.time, post.time), y=c(col.SC, calif.post)), color = 'red') +
geom_segment(aes(x=pre.time, xend=post.time, y=cross.term, yend=row.SC), color='blue') +
geom_point(aes(x=c(pre.time, post.time), y=c(cross.term, yend=row.SC)), color='blue') +
geom_segment(aes(x=pre.time, xend=post.time, y=col.SC, yend=row.SC + col.SC - cross.term), color='red', linetype=2) +
geom_point(aes(x=c(pre.time, post.time), y=c(col.SC, yend=row.SC + col.SC - cross.term)), color='red', shape=21) +
geom_line(aes(x=1969+pre, y=Y.pre[ss,]), color='red', linetype=3) +
geom_line(aes(x=1969+1:31, y = as.numeric(sc.trajectory)), color='blue', linetype=3) +
geom_vline(aes(xintercept=1969+19), color='black', linetype=1, alpha=.2) +
xlab('') + ylab('')
rm(list = ls())
library(ggplot2)
library(lfe)
library(lmtest)
library(sandwich)
library(xtable)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
calif = which(STATE.NAME == "California")
# only consider 5 post-treatment periods
post.periods = 1
focal.time = 11:ncol(Y.pre)
Delta.pre = Y.pre[,-1] - Y.pre[,-19]
sigma.sq = var(as.numeric(Delta.pre))
all.preds = outer(1:length(STATE.NAME), focal.time, Vectorize(function(ss, tt) {
omega.weight = sc_weight(t(Y.pre[-ss,1:(tt-1)]), Y.pre[ss,1:(tt-1)], zeta = sigma.sq)
lambda.weight = sc_weight(Y.pre[-ss,1:(tt-1)], Y.pre[-ss,tt], zeta = sigma.sq, intercept=TRUE)
col.SC = sum(lambda.weight * Y.pre[ss,1:(tt-1)])
row.SC = sum(omega.weight * Y.pre[-ss,tt])
cross.term = omega.weight %*% Y.pre[-ss,1:(tt-1)] %*% lambda.weight
sdid = as.numeric(row.SC + col.SC - cross.term)
sc = row.SC
did = mean(Y.pre[-ss,tt]) + mean(Y.pre[ss,1:(tt-1)]) - mean(Y.pre[-ss,1:(tt-1)])
list(c(did=did, sc=sc, sdid=sdid, truth=Y.pre[ss,tt]))
}))
did.err = apply(all.preds, 1:2, function(vv) vv[[1]]["did"] - vv[[1]]["truth"])
sc.err = apply(all.preds, 1:2, function(vv) vv[[1]]["sc"] - vv[[1]]["truth"])
sdid.err = apply(all.preds, 1:2, function(vv) vv[[1]]["sdid"] - vv[[1]]["truth"])
c(mean(did.err^2), mean(sc.err^2), mean(sdid.err^2))
state.rmse = data.frame(DID=sqrt(rowMeans(did.err^2)),
SC=sqrt(rowMeans(sc.err^2)),
SDID=sqrt(rowMeans(sdid.err^2)))
pdf("calif_sdid_vs_sc_mse.pdf")
pardef = par(xpd = FALSE, mar = c(4.5, 5, 3, 3) + 0.5, cex.lab=1.4, cex.axis=1.4, cex.main=1.4, cex.sub=1.4)
plot(state.rmse$SDID, state.rmse$SC, log = "xy", cex = 1.5,
xlab = "synthetic diff-in-diff RMSE",
ylab = "synthetic control RMSE")
abline(0, 1, lwd = 2, lty = 3)
points(state.rmse$SDID[calif], state.rmse$SC[calif], pch = 16, col = 4, cex = 1.5)
par(pardef)
dev.off()
for(iter in 1:length(STATE.NAME)) {
fnm = paste0("state_plots/", STATE.NAME[iter], ".pdf")
pdf(fnm)
pardef = par(xpd = FALSE, mar = c(4.5, 5, 3, 3) + 0.5, cex.lab=1.4, cex.axis=1.4, cex.main=1.4, cex.sub=1.4)
y.truth = sapply(all.preds[iter,], function(vv)vv["truth"])
y.did = sapply(all.preds[iter,], function(vv)vv["did"])
y.sc = sapply(all.preds[iter,], function(vv)vv["sc"])
y.sdid = sapply(all.preds[iter,], function(vv)vv["sdid"])
plot(1969 + focal.time, y.truth, type = "l", lwd = 4,
ylim = range(y.sc, y.did, y.sdid, y.truth),
xlab = "year", ylab = "smoking [packs per capita]")
lines(1969 + focal.time, y.did, lwd = 4, col = 5, lty = 2)
lines(1969 + focal.time, y.sc, lwd = 4, col = 4, lty = 5)
lines(1969 + focal.time, y.sdid, lwd = 4, col = 2, lty = 4)
par(pardef)
dev.off()
}
row.names(state.rmse) = STATE.NAME
state.rmse.ord = state.rmse[order(STATE.NAME),]
xtab.rmse = xtable(state.rmse.ord)
print(xtab.rmse, file="statewise_rmse.tex")
state.vec = STATE.NAME[rep(1:nrow(did.err), ncol(did.err))]
state.vec = factor(state.vec)
levels(state.vec) = rev(levels(state.vec))
time.vec = 1969 + as.numeric(t(matrix(rep(focal.time, nrow(did.err)), ncol(did.err), nrow(did.err))))
pdf("calif_sdid_errors.pdf")
sdid.df = data.frame(error=as.numeric(sdid.err), state=state.vec, time=time.vec)
ggplot(data=sdid.df, aes(x=time, y=state, fill=error)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="red", na.value="black", name="") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
pdf("calif_did_errors.pdf")
did.df = data.frame(error=as.numeric(did.err), state=state.vec, time=time.vec)
ggplot(data=did.df, aes(x=time, y=state, fill=error)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="red", na.value="black", name="") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
pdf("calif_sc_errors.pdf")
sc.df = data.frame(error=as.numeric(sc.err), state=state.vec, time=time.vec)
ggplot(data=sc.df, aes(x=time, y=state, fill=error)) +
geom_tile() +
scale_fill_gradient2(low="blue", high="red", na.value="black", name="") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
focal.time
View(all.preds)
View(sc.df)
calif
rm(list = ls())
library(ggplot2)
library(lfe)
library(lmtest)
library(sandwich)
library(xtable)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
View(data.raw)
t
t()
help(t)
calif = which(STATE.NAME == "California")
# only consider 5 post-treatment periods
post.periods = 1
focal.time = 11:ncol(Y.pre)
View(Y.pre)
View(Y.post)
Delta.pre = Y.pre[,-1] - Y.pre[,-19]
View(Delta.pre)
View(Delta.pre)
View(Delta.pre)
sigma.sq = var(as.numeric(Delta.pre))
#Sample File
library(synthdid)
library(mvtnorm)
n_0 <- 100
n_1 <- 10
T_0 <- 120
T_1 <- 20
n <- n_0 + n_1
T <- T_0 + T_1
tau <- 1
sigma <- .5
rank <- 2
rho <- 0.7
var <- outer(1:T, 1:T, FUN=function(x, y) rho^(abs(x-y)))
W <- (1:n > n_0) %*% t(1:T > T_0)
U <- matrix(rpois(rank * n, sqrt(1:n) / sqrt(n)), n, rank)
V <- matrix(rpois(rank * T, sqrt(1:T) / sqrt(T)), T, rank)
mu <- U %*% t(V)
error <- rmvnorm(n, sigma = var, method = "chol")
Y <- mu + tau * W  + sigma * error
tau.hat = synthdid_estimate(Y,n_0,T_0)
print(paste("true tau:", tau))
print(paste0("point estimate: ", round(tau.hat, 2)))
print(paste0("95% CI for tau: (", round(tau.hat - 1.96 * attr(tau.hat, 'se'), 2), ", ", round(tau.hat + 1.96 * attr(tau.hat, 'se'), 2), ")"))
View(Y)
View(W)
View(var)
help("function")
})
View(W)
install.packages("CVXR")
#Sample File
library(synthdid)
library(mvtnorm)
n_0 <- 100
n_1 <- 10
T_0 <- 120
T_1 <- 20
n <- n_0 + n_1
T <- T_0 + T_1
tau <- 1
sigma <- .5
rank <- 2
rho <- 0.7
var <- outer(1:T, 1:T, FUN=function(x, y) rho^(abs(x-y)))
W <- (1:n > n_0) %*% t(1:T > T_0)
U <- matrix(rpois(rank * n, sqrt(1:n) / sqrt(n)), n, rank)
V <- matrix(rpois(rank * T, sqrt(1:T) / sqrt(T)), T, rank)
mu <- U %*% t(V)
error <- rmvnorm(n, sigma = var, method = "chol")
Y <- mu + tau * W  + sigma * error
tau.hat = synthdid_estimate(Y,n_0,T_0)
print(paste("true tau:", tau))
print(paste0("point estimate: ", round(tau.hat, 2)))
print(paste0("95% CI for tau: (", round(tau.hat - 1.96 * attr(tau.hat, 'se'), 2), ", ", round(tau.hat + 1.96 * attr(tau.hat, 'se'), 2), ")"))
tau.hat
rm(list = ls())
rm(list = ls())
library(ggplot2)
library(lfe)
library(lmtest)
library(sandwich)
library(xtable)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
calif = which(STATE.NAME == "California")
Y = t(data.raw[9:39,])
View(Y)
View(Y)
rm(list = ls())
library(ggplot2)
library(lfe)
library(lmtest)
library(sandwich)
library(xtable)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
# THis is the full Y vector of data
Y = t(data.raw[9:39,])
# First 38 rows are control states
N_0 <- 38
# first 19 time points are pre-treatment
T_0 <- 19
calif = which(STATE.NAME == "California")
# Estimate synthetic diff-in-diff
tau.hat = synthdid_estimate(Y,N_0,T_0)
tau.hat
rm(list = ls())
library(ggplot2)
library(lfe)
library(lmtest)
library(sandwich)
library(xtable)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
# THis is the full Y vector of data
Y = t(data.raw[9:39,])
# First 38 rows are control states
N_0 <- 38
# first 19 time points are pre-treatment
T_0 <- 19
calif = which(STATE.NAME == "California")
# Estimate synthetic diff-in-diff
tau.hat = synthdid_estimate(Y,N_0,T_0)
setwd("~/reslocal/synthdid/experiments/california_smoking")
rm(list = ls())
library(ggplot2)
library(lfe)
library(lmtest)
library(sandwich)
library(xtable)
library(synthdid)
data.raw = read.table("MLAB_data.txt")
STATE.NAME = c("Alabama", "Arkansas", "Colorado", "Connecticut", "Delaware",
"Georgia", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
"Kentucky", "Louisiana", "Maine", "Minnesota", "Mississippi",
"Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
"New Mexico", "North Carolina", "North Dakota", "Ohio", "Oklahoma",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
"Tennessee", "Texas", "Utah", "Vermont", "Virginia", "West Virginia",
"Wisconsin", "Wyoming", "California")
STATE = data.raw[1,]
X = t(data.raw[2:8,])
Y.pre = t(data.raw[9:27,])
Y.post = t(data.raw[28:39,])
# THis is the full Y vector of data
Y = t(data.raw[9:39,])
# First 38 rows are control states
N_0 <- 38
# first 19 time points are pre-treatment
T_0 <- 19
calif = which(STATE.NAME == "California")
# Estimate synthetic diff-in-diff
tau.hat = synthdid_estimate(Y,N_0,T_0)
tau.hat
View(Y)
